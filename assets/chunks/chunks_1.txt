In this video, I would like to start the discussion about convolutional neural networks, which is another architecture of neural networks that we are going to see, specifically engineered to address problems that we are facing in computer vision.
I want to start this discussion with just showing you a picture, and if I ask you to tell me what would actually be the first object that you pay attention to, then most people will probably respond with yellow cab. It's not really an accident that a lot of cabs in a lot of capitals are painted yellow. You and of course, that attention to bright colors originates from thousands of years of evolution where people are of course trained to pay attention to bright colors, which are typically sources of food such as fruits or in some instances sources of danger such as the yellow tiger that is coming towards us.
So, kind of joking aside, I think you can associate this kind of image with the following kind of processing of various kind of stage processing that has been going on in your brain, trying to form the kind of perception system that we have embedded into it. If you can imagine the process, then the first thing that happens when you open your eyes, assuming that you have your eyes closed and you see an image like this, then the brain is actually in the first few milliseconds sampling this image in a coarse kind of way and determines whether we have situations as an immediate kind of threat or a source of food.
Then very quickly, the brain switches softly into objects, paying attention to objects which are associated with the task that we have to execute. For example, if you're waiting for someone in this kind of a scene, then you start paying more attention to people coming towards you, people getting out of vehicles, and so on.
Now, what I'd like to start getting into is the mechanics of a little bit of computer vision, some kind of basic principles. I wanted to cover a little bit, you know, the question as to okay, what is an image like the one that we've seen earlier and how we're going to represent it.
Evidently, an image is a matrix, and I think we had some discussion about images before. A black and white image, or a grayscale image as you actually see over here, is a matrix of elements that are integer numbers. These integer numbers, typically, each element corresponds to a pixel, and the dynamic range that we associate with, typically for in computer vision with those pixels, are 8 bits.
So, we represent the information at each pixel and codes as 8 bits, which means that these integer numbers are from 0 to 255. And so, when we go to color images, we need more than one of those matrices; in fact, we need three matrices, typically. Again, there are sensors which are of course encode the information to far more than three matrices, but those three matrices correspond to the fundamental colors typically of red, green, and blue.
This, which is actually what you see here, and also probably you notice that these numbers are now floating point numbers, let's say from 0 to 1. This results from normalizing these pixel numbers with the number 255 because 2 to the power of 8 is 256, and therefore all our numbers will be from 0 to 255 in those matrices. If we start dividing every element with 255, we get numbers between 0 and 1.
This is basically what we need to do in order to process the images with our new neural networks that we will introduce now called the convolutional neural networks. So, with convolutional neural networks, we need to start the discussion on what is a convolution, and this is what's coming next.
